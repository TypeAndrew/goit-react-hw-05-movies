{"version":3,"file":"static/js/922.be5bc94e.chunk.js","mappings":"uKAAO,IAAMA,EAAS,CAClBC,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q,mICFLC,EAAW,CACbC,QAAS,+BACTC,QAAS,4CAGPC,EAAWC,EAAAA,EAAAA,OAAaJ,GAEjBK,EAAS,mCAAG,sGACEF,EAASG,IAAI,mBAAqBN,EAASE,QAAS,CACvEK,OAAQ,CACJL,QAASC,EAASD,WAHL,uBACbM,EADa,EACbA,KADa,kBAQdA,GARc,2CAAH,qD,mBCFhBC,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACjBC,GAAcD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACnBE,GAAWF,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAoDtB,EA5CuB,WACrB,OAA4BG,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAASlB,EAAAA,EAAAA,MAArC,eAAOqB,EAAP,KAAeC,EAAf,KAEMC,EAAS,mCAAG,2FAChBD,EAAUtB,EAAAA,EAAAA,SADM,kBAGKU,IAHL,OAGRG,EAHQ,OAIdO,EAAUP,GACVS,EAAUtB,EAAAA,EAAAA,SALI,gDAOdwB,QAAQC,IAAR,MACAH,EAAUtB,EAAAA,EAAAA,OARI,yDAAH,qDAmBf,OANA0B,EAAAA,EAAAA,YAAU,WACRH,EAAU,CAAEI,KAAM,GACnB,GAAE,KAMD,iCAEIN,IAAWrB,EAAAA,EAAAA,SAAkBqB,IAAWrB,EAAAA,EAAAA,QAAgB,SAACgB,EAAD,IAEzDK,IAAWrB,EAAAA,EAAAA,QAAgB,SAACiB,EAAD,KAE5B,gBAAKW,UAAU,gCAAf,UACE,gBAAKA,UAAU,MAAf,gBACGT,QADH,IACGA,OADH,EACGA,EAAQU,QAAQC,KAAI,SAAAC,GAAK,OACxB,SAACjB,EAAD,CAA0BiB,MAAOA,EAAOC,KAAM,WAA9BD,EAAME,GADE,UASnC,C","sources":["constants/status.constants.js","services/getMovies.service.js","pages/MoviesListPage/MoviesListPage.jsx"],"sourcesContent":["export const STATUS = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n};","import axios from 'axios';\n\nconst APIparam = {\n    baseURL: 'https://api.themoviedb.org/3',\n    api_key: 'api_key=c491b5b8e2b4a9ab13619b0a91f8bb41',\n};\n\nconst postsApi = axios.create(APIparam);\n\nexport const getMovies = async( ) => {\n    const { data } = await postsApi.get('/movie/popular/?' + APIparam.api_key, {\n        params: {\n            api_key: postsApi.api_key,\n\n        },\n    });\n\n    return data;\n};\n\n//export default getMovies;","import { useEffect, useState } from 'react';\nimport { lazy } from \"react\";\nimport { getMovies } from '../../services/getMovies.service';\nimport { STATUS } from '../../constants/status.constants';\n\n//const STATUS = lazy(() => import(\"../../constants/status.constants\"));\n//const getMovies = lazy(() => import(\"../../services/getMovies.service\"));\nconst MovieItem = lazy(() => import(\"../../components/Movies/MovieItem\"));\nconst MovieLoader = lazy(() => import(\"../../components/Movies/MovieLoader\"));\nconst NotFound = lazy(() => import(\"../../components/NotFound/NotFound\"));\n\n//import { NotFound } from '../../components/NotFound/NotFound';\n//import { MovieItem } from '../../components/Movies/MovieItem';\n//import { MovieLoader } from '../../components/Movies/MovieLoader';\n\n\n\nconst MoviesListPage = ( ) => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(STATUS.idle);\n  \n  const fetchData = async () => {\n    setStatus(STATUS.loading);\n    try {\n      const data = await getMovies();\n      setMovies(data);\n      setStatus(STATUS.success);\n    } catch (error) {\n      console.log(error);\n      setStatus(STATUS.error);\n    }\n  };\n\n\n  useEffect(() => {\n    fetchData({ page: 1 });\n  }, []);\n\n \n\n  return (\n    \n    <>\n\n      {(status === STATUS.loading || status === STATUS.idle) && <MovieLoader />}\n\n      {status === STATUS.error && <NotFound />}\n\n      <div className=\"container-fluid g-0 pb-5 mb-5\">\n        <div className=\"row\">\n          {movies?.results.map(movie => (\n            <MovieItem key={movie.id} movie={movie} path={'movies/'} />\n          ))}\n        </div>\n      </div>\n\n     \n    </>\n  );\n};\n\nexport default MoviesListPage;"],"names":["STATUS","idle","loading","success","error","APIparam","baseURL","api_key","postsApi","axios","getMovies","get","params","data","MovieItem","lazy","MovieLoader","NotFound","useState","movies","setMovies","status","setStatus","fetchData","console","log","useEffect","page","className","results","map","movie","path","id"],"sourceRoot":""}