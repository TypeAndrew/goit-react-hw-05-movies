{"version":3,"file":"static/js/755.1cb4c442.chunk.js","mappings":"uKAAO,IAAMA,EAAS,CAClBC,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q,6ICFLC,EAAW,CACbC,QAAS,+BACTC,QAAS,4CAGPC,EAAWC,EAAAA,EAAAA,OAAaJ,GAEjBK,EAAiB,mCAAG,WAAOC,GAAP,yFACNH,EAASI,IAAI,kBAAoBP,EAASE,QAAU,UAAYI,EAAO,CAC1FE,OAAQ,CACJN,QAASC,EAASD,WAHG,uBACrBO,EADqB,EACrBA,KADqB,kBAQtBA,GARsB,2CAAH,sD,mBCHxBC,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACjBC,GAASD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAwFpB,EAlFqB,WACnB,OAA2BE,EAAAA,EAAAA,eAASC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAA4BL,EAAAA,EAAAA,UAASlB,EAAAA,EAAAA,MAArC,eAAOwB,EAAP,KAAeC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjB,EAAQgB,EAAaf,IAAI,UAG/BiB,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAS,mCAAG,2FAChBL,EAAUzB,EAAAA,EAAAA,SADM,kBAGKU,EAAkBC,GAHvB,OAGRG,EAHQ,OAIdO,EAAUP,GACVW,EAAUzB,EAAAA,EAAAA,SALI,gDAOd+B,QAAQC,IAAR,MACAP,EAAUzB,EAAAA,EAAAA,OARI,yDAAH,qDAYC,OAAVW,GACFmB,GAED,GAAC,CAACnB,IAmBJ,OAAIa,IAAWxB,EAAAA,EAAAA,SACP,SAACiB,EAAD,KAIL,iCACA,kBACEgB,OAAO,IACPC,UAAU,mBACVC,SAvBe,SAACC,GACpBA,EAAMC,iBAENT,EAAgB,CAAEjB,MAAOW,GAC1B,EAgBG,WAKE,kBACEgB,KAAK,OAAMC,GAAC,EACZL,UAAU,eACXM,YAAY,YAEZlB,MAAgB,MAATA,EAAgB,GAAKA,EAC5BmB,SAzBe,SAAAL,GACpB,IAAQd,EAAUc,EAAMM,OAAhBpB,MACRC,EAASD,EAIT,KAuBI,mBAAQgB,KAAK,SAASJ,UAAU,kBAAhC,wBAIF,gBAAKA,UAAY,gCAAjB,UACE,gBAAKA,UAAU,MAAf,gBACGd,QADH,IACGA,OADH,EACGA,EAAOuB,QAAQC,KAAI,SAAAC,GAAK,OACvB,SAAC9B,EAAD,CAA0B8B,MAAOA,EAAOC,KAAM,GAAKC,OAAQpC,GAA3CkC,EAAMG,GADC,UASlC,C","sources":["constants/status.constants.js","services/searhMoviesByName.service.js","pages/SearchMovies/SearchMovies.jsx"],"sourcesContent":["export const STATUS = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n};","import axios from 'axios';\n\nconst APIparam = {\n    baseURL: 'https://api.themoviedb.org/3',\n    api_key: 'api_key=c491b5b8e2b4a9ab13619b0a91f8bb41',\n};\n\nconst postsApi = axios.create(APIparam);\n\nexport const searhMoviesByName = async( query) => {\n    const { data } = await postsApi.get('/search/movie/?' + APIparam.api_key + '&query=' + query, {\n        params: {\n            api_key: postsApi.api_key,\n\n        },\n    });\n\n    return data;\n\n}\n\n//export default searhMoviesByName;","import { useSearchParams } from \"react-router-dom\";\nimport {  useState, useEffect } from 'react';\nimport { lazy } from \"react\";\nimport { searhMoviesByName } from '../../services/searhMoviesByName.service';\nimport { STATUS } from '../../constants/status.constants';\n\nconst MovieItem = lazy(() => import(\"../../components/Movies/MovieItem\"));\nconst Loader = lazy(() => import(\"../../components/Loader/Loader\"));\n//const searhMoviesByName = lazy(() => import(\"../../services/searhMoviesByName.service\"));\n//const STATUS = lazy(() => import(\"../../constants/status.constants\"));\n//import { MovieItem } from '../../components/Movies/MovieItem';\n//import { Loader } from '../../components/Loader/Loader';\n\nconst SearchMovies = () => {\n  const [video, setViedos] = useState(undefined);\n  const [value, setValue] = useState('');\n  const [status, setStatus] = useState(STATUS.idle);\n // const search = useRef(); \n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n\n  useEffect(() => {\n  const fetchData = async () => {\n    setStatus(STATUS.loading);\n    try {\n      const data = await searhMoviesByName(query);\n      setViedos(data);\n      setStatus(STATUS.success);\n    } catch (error) {\n      console.log(error);\n      setStatus(STATUS.error);\n    }\n    };\n  \n    if (query !== null) {\n      fetchData();\n      }\n    },[query])\n \n\n   \n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setSearchParams({ query: value })\n  };  \n\n   const handleChange = event => {\n    const { value } = event.target;\n    setValue(value);\n \n \n\n   };\n\n   if (status === STATUS.loading) {\n    return <Loader />;\n  }\n  \n return (\n      <>\n      <form\n        action=\"#\"\n        className=\"input-group mb-3\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"y\n          className=\"form-control\"\n         placeholder=\"search...\"\n         \n         value={value == null ? '' : value}\n         onChange={handleChange}  \n\n           />\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Search\n        </button>\n      </form>\n      <div className = \"container-fluid g-0 pb-5 mb-5\" >\n        <div className=\"row\">\n          {video?.results.map(movie => (\n            <MovieItem key={movie.id} movie={movie} path={''}  search={query }  />\n          ))}\n        </div>\n      </div>\n      </>\n     \n\n    )\n}\n\nexport default SearchMovies;"],"names":["STATUS","idle","loading","success","error","APIparam","baseURL","api_key","postsApi","axios","searhMoviesByName","query","get","params","data","MovieItem","lazy","Loader","useState","undefined","video","setViedos","value","setValue","status","setStatus","useSearchParams","searchParams","setSearchParams","useEffect","fetchData","console","log","action","className","onSubmit","event","preventDefault","type","y","placeholder","onChange","target","results","map","movie","path","search","id"],"sourceRoot":""}