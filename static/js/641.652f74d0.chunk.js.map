{"version":3,"file":"static/js/641.652f74d0.chunk.js","mappings":"6PAEMA,EAAW,CACbC,QAAS,+BACTC,QAAS,4CAGPC,EAAWC,EAAAA,EAAAA,OAAaJ,GAEjBK,EAAU,mCAAG,WAAMC,GAAN,yFACCH,EAASI,IAAI,UAAYD,EAAQ,YAAcN,EAASE,QAAS,CACpFM,OAAQ,CACJN,QAASC,EAASD,WAHJ,uBACdO,EADc,EACdA,KADc,kBAQfA,GARe,2CAAH,sD,mBCFjBC,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACnBC,GAASD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IA6CpB,EAzCgB,WAAO,IAAD,EAEZL,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA4BQ,EAAAA,EAAAA,UAASC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBC,OAjBDC,EAAAA,EAAAA,YAAU,WAGP,IAAMC,EAAS,mCAAG,2FACjBJ,EAAUF,EAAAA,EAAAA,SADO,kBAGIV,EAAWC,GAHf,OAGTG,EAHS,OAIfU,EAASV,GACTQ,EAAUF,EAAAA,EAAAA,SALK,gDAOfO,QAAQC,IAAR,MACAN,EAAUF,EAAAA,EAAAA,OARK,yDAAH,qDAWhBM,GACD,GAAE,CAACf,IAECU,IAAWD,EAAAA,EAAAA,SACP,SAACH,EAAD,KAKL,+BACE,+BACKM,QADL,IACKA,GADL,UACKA,EAAOM,eADZ,aACK,EAAgBC,KAAI,SAAAC,GAAO,OACxB,SAAChB,EAAD,CAA8BgB,QAASA,GAArBA,EAAQC,GADF,OAOvC,C,uDCnDM,IAAMZ,EAAS,CAClBa,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q","sources":["services/getRewievs.service.js","components/Reviews/Reviews.jsx","constants/status.constants.js"],"sourcesContent":["import axios from 'axios';\n\nconst APIparam = {\n    baseURL: 'https://api.themoviedb.org/3',\n    api_key: 'api_key=c491b5b8e2b4a9ab13619b0a91f8bb41',\n};\n\nconst postsApi = axios.create(APIparam);\n\nexport const getRewievs = async(movieId) => {\n    const { data } = await postsApi.get('/movie/' + movieId+'/reviews?' + APIparam.api_key, {\n        params: {\n            api_key: postsApi.api_key,\n\n        },\n    });\n\n    return data;\n\n}\n\n\n//export default getRewievs;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { lazy } from \"react\";\n//import { ReviewsItem } from './ReviewsItem';\nimport { getRewievs } from '../../services/getRewievs.service';\nimport { STATUS } from '../../constants/status.constants';\n//import { Loader } from '../Loader/Loader';\nconst ReviewsItem = lazy(() => import(\"./ReviewsItem\"));\nconst Loader = lazy(() => import(\"../Loader/Loader\"));\n//const getRewievs = lazy(() => import(\"../../services/getRewievs.service\"));\n//const STATUS = lazy(() => import(\"../../constants/status.constants\"));\n\nconst Reviews = () => {\n\n  const { movieId } = useParams();\n  const [status, setStatus] = useState(STATUS.idle);\n  const [value, setValue] = useState(null);\n\n\n  useEffect(() => {\n     \n    // TODO create service\n     const fetchData = async () => {\n      setStatus(STATUS.loading);\n      try {\n        const data = await getRewievs(movieId);\n        setValue(data);\n        setStatus(STATUS.success);\n      } catch (error) {\n        console.log(error);\n        setStatus(STATUS.error);\n      }\n    }; \n    fetchData();\n  }, [movieId]);\n  \n   if (status === STATUS.loading) {\n    return <Loader />;\n  }\n \n\n  return (\n      <>\n        <ul  >\n            {value?.results?.map(element => \n                <ReviewsItem key={element.id} element={element}/>\n            )}\n      </ul>\n    </>  \n    )\n\n}\n\nexport default Reviews;","export const STATUS = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n};"],"names":["APIparam","baseURL","api_key","postsApi","axios","getRewievs","movieId","get","params","data","ReviewsItem","lazy","Loader","useParams","useState","STATUS","status","setStatus","value","setValue","useEffect","fetchData","console","log","results","map","element","id","idle","loading","success","error"],"sourceRoot":""}