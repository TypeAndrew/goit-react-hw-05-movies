{"version":3,"file":"static/js/244.5ad35787.chunk.js","mappings":"uKAAO,IAAMA,EAAS,CAClBC,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q,iKCFLC,EAAW,CACbC,QAAS,+BACTC,QAAS,4CAGPC,EAAWC,EAAAA,EAAAA,OAAaJ,GAEjBK,EAAe,mCAAG,WAAMC,GAAN,yFACJH,EAASI,IAAI,UAAYD,EAAU,IAAMN,EAASE,QAAS,CAC9EM,OAAQ,CACJN,QAASC,EAASD,WAHC,uBACnBO,EADmB,EACnBA,KADmB,kBAQpBA,GARoB,2CAAH,sD,SCCtBC,GAASC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACdC,GAAWD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAEhBE,GAASF,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAyEpB,EAvEwB,WAAO,IAAD,YAGpBL,GAAYQ,EAAAA,EAAAA,MAAZR,QAER,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASpB,EAAAA,EAAAA,MAArC,eAAOuB,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAkB7C,OAhBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAS,mCAAG,2FAChBP,EAAUxB,EAAAA,EAAAA,SADM,kBAGKU,EAAgBC,GAHrB,OAGRG,EAHQ,OAIdQ,EAASR,GACTU,EAAUxB,EAAAA,EAAAA,SALI,gDAOdgC,QAAQC,IAAR,MACAT,EAAUxB,EAAAA,EAAAA,OARI,yDAAH,qDAWf+B,GACH,GAAE,CAACpB,IAEAY,IAAWvB,EAAAA,EAAAA,SACN,SAACkB,EAAD,IAIPG,IACE,iCACE,SAACJ,EAAD,CAAUiB,GAAIP,EAAd,mBACA,iBAAKQ,UAAW,YAAhB,WACA,gBACEC,IAAK,uCAAuCf,EAAMgB,cAClDC,IAAKjB,EAAMkB,MACXJ,UAAU,iBACVK,MAAO,CAAEC,UAAW,QAASC,MAAO,OAAQC,UAAW,YAEvD,iBAAKR,UAAW,iBAAhB,WACE,eAAIA,UAAU,OAAd,SAAsBd,EAAMkB,SAC5B,wCAAgBlB,EAAMuB,aAAtB,QACA,sCACA,uBAAIvB,EAAMwB,YACV,oCACE,SAAC9B,EAAD,CAAQD,KAAMO,EAAMyB,gBAG1B,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAOC,UAAU,uBAAuBP,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAAxF,qBAIF,yBACE,SAAC,KAAD,CAAMK,GAAG,UAAUC,UAAU,uBAAuBP,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAA3F,6BAMR,SAAC,KAAD,MAIL,C","sources":["constants/status.constants.js","services/getDetailsMovie.js","pages/SingleMoviePage/SingleMoviePage.jsx"],"sourcesContent":["export const STATUS = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n};","import axios from 'axios';\n\nconst APIparam = {\n    baseURL: 'https://api.themoviedb.org/3',\n    api_key: 'api_key=c491b5b8e2b4a9ab13619b0a91f8bb41',\n};\n\nconst postsApi = axios.create(APIparam);\n\nexport const getDetailsMovie = async(movieId) => {\n    const { data } = await postsApi.get('/movie/' + movieId + '?' + APIparam.api_key, {\n        params: {\n            api_key: postsApi.api_key,\n\n        },\n    });\n\n    return data;\n};\n\n\n//export default getDetailsMovie;","import { useEffect, useState,  } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { STATUS } from '../../constants/status.constants';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport { lazy } from \"react\";\nimport { getDetailsMovie } from '../../services/getDetailsMovie';\n//import { Genres } from '../../components/Genres/Genres'\n//import { BackLink } from '../../components/BackLink/BackLink';\n//import { Loader } from '../../components/Loader/Loader';\n\nconst Genres = lazy(() => import(\"../../components/Genres/Genres\"));\nconst BackLink = lazy(() => import(\"../../components/BackLink/BackLink\"));\n//const getDetailsMovie = lazy(() => import(\"../../services/getDetailsMovie\"));\nconst Loader = lazy(() => import(\"../../components/Loader/Loader\"));\n\nconst SingleMoviePage = () => {\n  // TODO change to dynamic value\n\n  const { movieId } = useParams();\n \n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    \n      const fetchData = async () => {\n        setStatus(STATUS.loading);\n        try {\n          const data = await getDetailsMovie(movieId);\n          setMovie(data);\n          setStatus(STATUS.success);\n        } catch (error) {\n          console.log(error);\n          setStatus(STATUS.error);\n        }\n      };\n      fetchData();\n  }, [movieId]);\n\n  if (status === STATUS.loading) {\n    return <Loader />;\n  }\n\n   return (\n    movie && (\n      <>\n        <BackLink to={backLinkHref}>Back</BackLink>\n        <div className={'movieCard'}>\n        <img\n          src={'https://image.tmdb.org/t/p/original/'+movie.backdrop_path}\n          alt={movie.title}\n          className=\"img-fluid mb-4\"\n          style={{ maxHeight: '300px', width: '100%', objectFit: 'cover' }}\n        />\n          <div className={'movieCardtitle'}>\n            <h1 className=\"mb-5\">{movie.title}</h1>\n            <p>user score: {movie.vote_average }%</p>\n            <p>overview:</p>\n            <p>{movie.overview}</p>\n            <p>genres:</p>\n              <Genres data={movie.genres} />\n          </div>\n        </div>\n        <div >\n          <ul>\n            <li>\n              <Link to=\"cast\" className=\"btn btn-primary my-4\" state={{ from: location.state?.from ?? '/movies' }}>\n              cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" className=\"btn btn-primary my-4\" state={{ from: location.state?.from ?? '/movies' }}>\n              reviews\n              </Link>\n            </li>  \n        </ul>\n        </div>\n      <Outlet />\n      </>\n    )\n  );\n};\n\nexport default SingleMoviePage;\n "],"names":["STATUS","idle","loading","success","error","APIparam","baseURL","api_key","postsApi","axios","getDetailsMovie","movieId","get","params","data","Genres","lazy","BackLink","Loader","useParams","useState","movie","setMovie","status","setStatus","location","useLocation","backLinkHref","state","from","useEffect","fetchData","console","log","to","className","src","backdrop_path","alt","title","style","maxHeight","width","objectFit","vote_average","overview","genres"],"sourceRoot":""}