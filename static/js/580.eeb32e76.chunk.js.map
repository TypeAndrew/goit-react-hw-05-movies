{"version":3,"file":"static/js/580.eeb32e76.chunk.js","mappings":"uQAEMA,EAAW,CACbC,QAAS,+BACTC,QAAS,4CAGNC,EAAWC,EAAAA,EAAAA,OAAaJ,GAGlBK,EAAQ,mCAAG,WAAMC,GAAN,yFACGH,EAASI,IAAI,UAAYD,EAAU,YAAcN,EAASE,QAAS,CACtFM,OAAQ,CACJN,QAASC,EAASD,WAHN,uBACZO,EADY,EACZA,KADY,kBAQbA,GARa,2CAAH,sD,SCAfC,GAASC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACdC,GAAWD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA4CtB,EA1Ca,WAAO,IAAD,EAETL,GAAYO,EAAAA,EAAAA,MAAZP,QAER,GAA0BQ,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAqBA,OAjBCC,EAAAA,EAAAA,YAAU,WAET,IAAMC,EAAS,mCAAG,2FAChBF,EAAUF,EAAAA,EAAAA,SADM,kBAGKZ,EAASC,GAHd,OAGRG,EAHQ,OAIdO,EAASP,GACTU,EAAUF,EAAAA,EAAAA,SALI,gDAOdK,QAAQC,IAAR,MACAJ,EAAUF,EAAAA,EAAAA,OARI,yDAAH,qDAWfI,GAED,GAAE,CAACf,IAEAY,IAAWD,EAAAA,EAAAA,SACN,SAACP,EAAD,KAIL,+BACE,+BACKK,QADL,IACKA,GADL,UACKA,EAAOS,YADZ,aACK,EAAaC,KAAI,SAAAC,GAAO,OACrB,SAACd,EAAD,CAA2Bc,QAASA,GAArBA,EAAQC,GADF,OAOpC,C,uDCrDM,IAAMV,EAAS,CAClBW,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q","sources":["services/getCasts.service.js","components/Cast/Cast.jsx","constants/status.constants.js"],"sourcesContent":["import axios from 'axios';\n\nconst APIparam = {\n    baseURL: 'https://api.themoviedb.org/3',\n    api_key: 'api_key=c491b5b8e2b4a9ab13619b0a91f8bb41',\n};\n\n const postsApi = axios.create(APIparam);\n\n\nexport const getCasts = async(movieId) => {\n    const { data } = await postsApi.get('/movie/' + movieId + '/credits?' + APIparam.api_key, {\n        params: {\n            api_key: postsApi.api_key,\n\n        },\n    });\n\n    return data;\n\n}\n\n//export default getCasts;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { lazy } from \"react\";\nimport { STATUS } from '../../constants/status.constants';\n//import { CastItem } from './CastItem';\nimport { getCasts } from '../../services/getCasts.service';\n\n//import { Loader } from '../Loader/Loader';\n//const getCasts = lazy(() => import(\"../../services/getCasts.service\"));\n//const STATUS = lazy(() => import(\"../../constants/status.constants\"));\nconst Loader = lazy(() => import(\"../Loader/Loader\"));\nconst CastItem = lazy(() => import(\"./CastItem\"));\n\nconst Cast = () => {\n\n  const { movieId } = useParams();\n\n  const [value, setValue] = useState(null);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  \n\n   useEffect(() => {\n    \n    const fetchData = async () => {\n      setStatus(STATUS.loading);\n      try {\n        const data = await getCasts(movieId);\n        setValue(data);\n        setStatus(STATUS.success);\n      } catch (error) {\n        console.log(error);\n        setStatus(STATUS.error);\n      }\n    }; \n    fetchData();\n      \n  }, [movieId]);\n  \n  if (status === STATUS.loading) {\n    return <Loader />;\n  }\n \n  return (\n      <>\n        <ul  >\n            {value?.cast?.map(element => \n                <CastItem key={element.id} element={element}/>\n            )}\n      </ul>\n     </> \n    )\n\n}\n\nexport default Cast;","export const STATUS = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n};"],"names":["APIparam","baseURL","api_key","postsApi","axios","getCasts","movieId","get","params","data","Loader","lazy","CastItem","useParams","useState","value","setValue","STATUS","status","setStatus","useEffect","fetchData","console","log","cast","map","element","id","idle","loading","success","error"],"sourceRoot":""}